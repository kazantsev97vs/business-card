## Уровень логирования
#log4j.rootLogger=INFO, stdout, file
#
## Указываем тип апендера – консоль (ConsoleAppender).
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#
## Указываем, куда именно будем писать – System.out.
#log4j.appender.stdout.Target=System.out
#
## Задаем класс, который будет управлять шаблонами записей – PatternLayout.
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#
## Задаем шаблон для записи, который будет использоваться.
#log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
#
## Апендер для работы с файлами
#log4j.appender.file=org.apache.log4j.RollingFileAppender
#
## Путь где будет создаваться лог файл
#log4j.appender.file.File=src\\main\\resources\\log4j\\log_file.log
#
## Указываем максимальный размер файла с логами. При превышении размера, начнет писаться новый файл.
#log4j.appender.file.MaxFileSize=5MB
#
## Указываем количество старых файлов логов, которые надо хранить
#log4j.appender.file.MaxBackupIndex=1
#
## Конфигурируем шаблон вывода логов в файл
#log4j.appender.file.layout=org.apache.log4j.PatternLayout
#log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

#status = debug
#name = softlab.test.task
#appenders = console
#
#log4j.appender.console.type = Console
#log4j.appender.console.name = STDOUT
#log4j.appender.console.layout.type = PatternLayout
#log4j.appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} - %msg%n
#
#
#rootLogger.level = warn
#rootLogger.appenderRefs = stdout
#rootLogger.appenderRef.stdout.ref = STDOUT

status = error
dest = err
name = PropertiesConfig

property.filename = src/main/resources/log4j/log_file.log
property.pattern = %clr{%d{dd-MM-yyyy HH:mm:ss.SSS}}{faint} %clr{%5p} %clr{${sys:PID}}{magenta} %clr{---}{faint} %clr{[%15.15t]}{faint} %clr{%-40.40c{1.}}{cyan} %clr{:}{faint} %m%n%xwEx

filter.threshold.type = ThresholdFilter
filter.threshold.level = debug

appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = ${pattern}
appender.console.filter.threshold.type = ThresholdFilter
appender.console.filter.threshold.level = debug

appender.rolling.type = RollingFile
appender.rolling.name = RollingFile
appender.rolling.fileName = ${filename}
appender.rolling.filePattern = src/main/resources/log4j2/%d{MM-dd-yy-HH-mm-ss}-%i.log
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d{dd-MM-yyyy HH:mm:ss.SSS} %5p %C{1.} [%t] %m%n
appender.rolling.policies.type = Policies
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 2
appender.rolling.policies.time.modulate = true
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size=100MB
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.max = 5

logger.rolling.name = softlab.test.task.BusinessCard
logger.rolling.level = debug
logger.rolling.additivity = false
logger.rolling.appenderRef.rolling.ref = RollingFile

rootLogger.level = debug
rootLogger.appenderRef.stdout.ref = STDOUT